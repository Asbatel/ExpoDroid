package malware.scanner.Hook;

import android.app.Activity;
import android.content.ComponentName;
import android.content.Intent;
import android.net.Uri;
import android.util.Log;

import de.robv.android.xposed.IXposedHookLoadPackage;
import de.robv.android.xposed.XC_MethodHook;
import de.robv.android.xposed.XposedBridge;
import de.robv.android.xposed.callbacks.XC_LoadPackage;
import malware.scanner.Utils.Constants;

import static de.robv.android.xposed.XposedHelpers.findAndHookMethod;

public class Hooks implements IXposedHookLoadPackage {


    public void handleLoadPackage(final XC_LoadPackage.LoadPackageParam lpparam) throws Throwable {

        XposedBridge.log("Loaded package " + lpparam.packageName);
        if (!lpparam.packageName.equals(Constants.PACKAGE_INSTALLER))
            return;

        // Hook the processPackageUri method in the package installer to get the apk, create a hash of the file and send it to our app
        findAndHookMethod(Constants.PACKAGE_INSTALLER_ACTIVITY, lpparam.classLoader, Constants.PROCESS_PACKAGE_URI, Uri.class, new XC_MethodHook() {

            @Override
            protected void beforeHookedMethod(MethodHookParam param) {

                final Activity packageInstallerActivity = (Activity) param.thisObject;
                final Uri apkUri = (Uri) param.args[0];
                boolean hasBenignExtra = packageInstallerActivity.getIntent().hasExtra(Constants.IS_BENIGN);

                if (hasBenignExtra && packageInstallerActivity.getIntent().getBooleanExtra(Constants.IS_BENIGN, false)) {
                    Log.d(Constants.HOOK_PREFIX, "Apk is benign. Continuing with normal app installation...");

                } else {

                    //Start our activity to check the apk
                    Intent intent = createIntent(apkUri.getPath());
                    packageInstallerActivity.startActivity(intent);

                    Log.d(Constants.HOOK_PREFIX, "Apk not checked... checking apk");

                    //Cancel apk installation
                    failAppInstallation(packageInstallerActivity);
                }
            }
        });
    }


    private void failAppInstallation(final Activity packageInstallerActivity) {
        Log.d(Constants.HOOK_PREFIX, "Failing apk installation...");
        packageInstallerActivity.finish();
    }

    // Creates an intent to start the malware scanner and puts the apk's uri as an extra.

    private Intent createIntent(final String apkPath) {
        Intent intent = new Intent(Intent.ACTION_MAIN);
        intent.setComponent(new ComponentName("malware.scanner", "malware.scanner.Activities.SplashActivity"));
        intent.putExtra(Constants.PATH_TO_APK, apkPath);
        return intent;
    }
}
